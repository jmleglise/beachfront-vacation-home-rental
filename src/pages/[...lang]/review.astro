---
import { supportedLang } from "@/lib/utils/languageParser";

export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

const botToken = import.meta.env.PUBLIC_BOT_TOKEN;
const chatId = import.meta.env.PUBLIC_CHAT_ID;
---

<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Villa Tamaris</title>
  <style>
    body {
      font-family: 'Helvetica Neue', sans-serif;
      text-align: center;
      margin: 0;
      padding: 2rem 1rem;
      background: #fff;
      color: #333;
    }

    h1 {
      font-weight: 300;
      font-size: 1.8rem;
      margin-bottom: 2rem;
    }

    #stars-container {
      display: flex;
      justify-content: center;
      gap: 0.5rem;
    }

    .stars {
      font-size: 2.5rem;
      cursor: pointer;
      color: transparent;
      -webkit-text-stroke: 1px #999;
      transition: all 0.2s ease-in-out;
    }

    .stars.hovered,
    .stars.selected {
      color: gold;
      -webkit-text-stroke: 1px gold;
    }

    #form {
      display: none;
      flex-direction: column;
      gap: 1rem;
      margin-top: 2rem;
      align-items: center;
    }

    textarea {
      width: 90%;
      max-width: 400px;
      height: 100px;
      font-size: 1rem;
      padding: 0.5rem;
      border: 1px solid #ccc;
      border-radius: 5px;
      resize: vertical;
    }

    select {
      font-size: 1rem;
      padding: 0.5rem;
      margin: 0 0.25rem;
    }

    #submit {
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      border: none;
      background-color: #eef2ff;
      color: #888;
      border-radius: 5px;
      cursor: not-allowed;
    }

    #submit.enabled {
      background-color: #4f46e5;
      color: white;
      cursor: pointer;
    }

    #message {
      font-size: 1.2rem;
      margin-top: 2rem;
      display: none;
    }
  </style>
</head>
<body>

  <h1>Villa Tamaris</h1>

  <div id="stars-container">
    <span class="stars" data-value="1">&#9733;</span>
    <span class="stars" data-value="2">&#9733;</span>
    <span class="stars" data-value="3">&#9733;</span>
    <span class="stars" data-value="4">&#9733;</span>
    <span class="stars" data-value="5">&#9733;</span>
  </div>

  <form id="form">
    <textarea placeholder="Partagez votre exp√©rience concernant ce lieu" id="reviewText" required></textarea>
    <div>
      <label for="month">Date de la visite</label><br />
      <select id="month">
        <option>Janvier</option><option>F√©vrier</option><option>Mars</option><option>Avril</option>
        <option>Mai</option><option>Juin</option><option selected>Juillet</option>
        <option>Ao√ªt</option><option>Septembre</option><option>Octobre</option>
        <option>Novembre</option><option>D√©cembre</option>
      </select>
      <select id="year">
        <option>2024</option>
        <option selected>2025</option>
        <option>2026</option>
      </select>
    </div>
    <button type="submit" id="submit">Publier</button>
  </form>

  <div id="message"></div>

  <script>
    const botToken = `${botToken}`;
    const chatId = `${chatId}`;

    const stars = document.querySelectorAll('.stars');
    const form = document.getElementById('form');
    const submit = document.getElementById('submit');
    const messageDiv = document.getElementById('message');
    const starsContainer = document.getElementById('stars-container');
    let selected = 0;

    stars.forEach((star, idx) => {
      star.addEventListener('mouseover', () => highlightStars(idx + 1));
      star.addEventListener('mouseout', () => highlightStars(selected));
      star.addEventListener('click', () => {
        selected = idx + 1;
        highlightStars(selected);
        if (selected === 5) {
          window.location.href = "https://g.page/r/CTOZ9gJDprgQEAE/review";
        } else {
          form.style.display = 'flex';
        }
      });
    });

    function highlightStars(count) {
      stars.forEach((star, i) => {
        star.classList.toggle('hovered', i < count);
        star.classList.toggle('selected', i < count);
      });
    }

    form.addEventListener('input', () => {
      submit.classList.add('enabled');
      submit.disabled = false;
    });

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      const data = {
        stars: selected,
        message: document.getElementById('reviewText').value,
        month: document.getElementById('month').value,
        year: document.getElementById('year').value
      };

      fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: chatId,
          text: `‚≠ê ${data.stars} √©toiles\nüóì Visite : ${data.month} ${data.year}\nüí¨ ${data.message}`
        })
      })
      .then(response => {
        starsContainer.style.display = 'none';
        form.style.display = 'none';
        if (response.ok) {
          messageDiv.textContent = "Merci pour votre avis !";
        } else {
          messageDiv.textContent = "Erreur d'envoi. Veuillez v√©rifier votre connexion.";
        }
        messageDiv.style.display = 'block';
      })
      .catch(() => {
        starsContainer.style.display = 'none';
        form.style.display = 'none';
        messageDiv.textContent = "Erreur d'envoi. Veuillez v√©rifier votre connexion.";
        messageDiv.style.display = 'block';
      });
    });
  </script>

</body>
</html>
