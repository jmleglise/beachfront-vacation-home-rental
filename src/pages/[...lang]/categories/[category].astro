---
import BlogCard from "@/components/BlogCard.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { supportedLang } from "@/lib/utils/languageParser";
import { sortByDate } from "@/lib/utils/sortFunctions";
import PostSidebar from "@/partials/PostSidebar.astro";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";

// get all static paths for categories
export async function getStaticPaths() {
  const { default_language } = config.settings;

  const paths = await Promise.all(
    supportedLang.map(async (lang) => {
      const categories = await getTaxonomy(
        lang as keyof ContentEntryMap,
        "categories"
      );

      return categories.map((category) => ({
        params: {
          lang: lang || undefined,
          category: category,
        },
        props: {
          category,
        },
      }));
    })
  );

  // Handle default path (no lang)
  const defaultCategories = await getTaxonomy(
    default_language as keyof ContentEntryMap,
    "categories"
  );
  const defaultPaths = defaultCategories.map((category) => ({
    params: {
      lang: undefined,
      category: category,
    },
    props: {
      category,
    },
  }));

  return [...paths.flat(), ...defaultPaths];
}

const { category, lang } = Astro.params;

// get posts by category
const BLOG_FOLDER = "blog";
const posts = await getSinglePage(BLOG_FOLDER, lang as keyof ContentEntryMap);
const filterByCategories = taxonomyFilter(posts, "categories", category!);
const sortedPosts = sortByDate(filterByCategories);

const langCollection: keyof ContentEntryMap = lang as keyof ContentEntryMap;
const allCategories = await getAllTaxonomy(langCollection, "categories");
const categories = await getTaxonomy(langCollection, "categories");
const tags = await getTaxonomy(langCollection, "tags");

---

<Base title={category}>
  <PageHeader title={category} />
  
  <section class="section">
    <div class="container">
      <div class="row gx-5">
        <!-- blog posts -->
        <div class="lg:col-8">
          <div class="row">
            {
              sortedPosts.map((post) => (
                <div class="mb-14 md:col-6 lg:col-4">
                  <BlogCard data={post} />
                </div>
              ))
            }
          </div>
    <!--      <Pagination
            section={BLOG_FOLDER}
            currentPage={1}
            totalPages={totalPages}
          />
          -->
        </div>

        <!-- sidebar -->
        <PostSidebar
          categories={categories}
          tags={tags}
          allCategories={allCategories}
        />
      </div>
    </div>
  </section>


</Base>